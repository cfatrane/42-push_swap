$>./checker 3 2 1 0
rra
pb
sa
rra
pa
OK
$>./checker 3 2 1 0
sa
rra
pb
KO
$>./checker 3 2 one 0
Error

ft_printf("\033[32mSize A = %d\tSize B = %d\033[0m", checker->size_a, checker->size_b);
ft_putchar('\n');
ft_stack_display(checker->stack_a);
ft_stack_display(checker->stack_b);

./push_swap `ruby -e "puts (-100..100).to_a.shuffle.join(' ')"`

partitionner(tableau T, entier premier, entier dernier, entier pivot)
	échanger T[pivot] et T[dernier]  // échange le pivot avec le dernier du tableau , le pivot devient le dernier du tableau
	j := premier
	pour i de premier à dernier - 1 // la boucle se termine quand i = (dernier-1).
	si T[i] <= T[dernier] alors
	échanger T[i] et T[j]
	j := j + 1
	échanger T[dernier] et T[j]
	renvoyer j

tri_rapide(tableau T, entier premier, entier dernier)
	début
	si premier < dernier alors
	pivot := choix_pivot(T, premier, dernier)
	pivot := partitionner(T, premier, dernier, pivot)
	tri_rapide(T, premier, pivot-1)
tri_rapide(T, pivot+1, dernier)
	fin si
	fin

./push_swap -v -12 13 -89 -8 37 -74 -2 26 7 4 61 19 -51 -93 -97 96 39 -69 57 -21 98 -80 -71 85 -56 99 30 8 88 67 32 -40 -46 40 -53 49 80 -38 -57 -24 -84 9 -59 48 -96 -32 -10 -34 -19 -81 -42 38 -5 47 51 33 -92 31 82 -54 36 11 -37 90 -64 18 -55 -75 78 89 22 42 -49 -15 97 73 53 -22 55 54 -25 35 -44 -20 -65 24 5 -94 -16 -17 -7 77 71 -31 -6 56 -62 -91 3 -95 -76 -78 -26 14 15 -66 -41 100 -52 -4 84 59 -48 69 -45 76 94 -35 -13 50 -87 2 92 43 20 -88 29 6 -90 21 25 -47 -60 44 65 46 60 95 41 17 12 23 -77 16 -98 -58 -99 -39 58 74 34 -36 -18 1 87 -1 68 -33 -43 81 83 -79 -100 -14 -67 64 0 79 28 66 -72 -68 -27 75 52 91 -82 -83 -3 -11 -50 27 -61 72 -9 -73 45 -23 62 -85 -86 -28 63 10 -63 -30 93 -29 -70 70 86
