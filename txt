$>./checker 3 2 1 0
rra
pb
sa
rra
pa
OK
$>./checker 3 2 1 0
sa
rra
pb
KO
$>./checker 3 2 one 0
Error

ft_printf("\033[32mSize A = %d\tSize B = %d\033[0m", checker->size_a, checker->size_b);
ft_putchar('\n');
ft_stack_display(checker->stack_a);
ft_stack_display(checker->stack_b);

./push_swap `ruby -e "puts (-100..100).to_a.shuffle.join(' ')"

partitionner(tableau T, entier premier, entier dernier, entier pivot)
	échanger T[pivot] et T[dernier]  // échange le pivot avec le dernier du tableau , le pivot devient le dernier du tableau
	j := premier
	pour i de premier à dernier - 1 // la boucle se termine quand i = (dernier-1).
	si T[i] <= T[dernier] alors
	échanger T[i] et T[j]
	j := j + 1
	échanger T[dernier] et T[j]
	renvoyer j

tri_rapide(tableau T, entier premier, entier dernier)
	début
	si premier < dernier alors
	pivot := choix_pivot(T, premier, dernier)
	pivot := partitionner(T, premier, dernier, pivot)
	tri_rapide(T, premier, pivot-1)
tri_rapide(T, pivot+1, dernier)
	fin si
	fin

